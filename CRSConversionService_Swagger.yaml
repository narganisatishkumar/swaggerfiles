swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8084'
basePath: /api/crs/converter
paths:
  /v2/convert:
    post:
      tags:
        - CRS Point Conversion
      summary: Convert a list of points
      description: Convert a list of points
      operationId: convertPointUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/ConvertPointsRequest'
      responses:
        '200':
          description: Conversion performed successfully
          schema:
            $ref: '#/definitions/ConvertPointsResponse'
        '201':
          description: Created
        '400':
          description: Bad input format
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Unknown error.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: CRS-converter overloaded; try again later
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer Authorization: []
      deprecated: false
  /v2/convertGeoJson:
    post:
      tags:
        - CRS Point Conversion
      summary: Convert a GeoJSON or AnyCrsGeoJson structure
      description: Convert a GeoJSON or AnyCrsGeoJson structure
      operationId: convertGeoJsonUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/ConvertGeoJsonRequest'
      responses:
        '200':
          description: Conversion performed successfully
          schema:
            $ref: '#/definitions/ConvertGeoJsonResponse'
        '201':
          description: Created
        '400':
          description: Bad input format
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Unknown error.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: CRS-converter overloaded; try again later
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer Authorization: []
      deprecated: false
  /v2/convertTrajectory:
    post:
      tags:
        - Trajectory Computation and Conversion
      summary: Convert trajectory stations
      description: 'Convert a list of trajectory stations, given the unit and spatial context and a reference point in 3D where MD==0.'
      operationId: convertTrajectoryUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: data-partition-id
          in: header
          description: tenant
          required: true
          type: string
          default: opendes
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/ConvertTrajectoryRequest'
      responses:
        '200':
          description: Trajectory conversion performed successfully
          schema:
            $ref: '#/definitions/ConvertTrajectoryResponse'
        '201':
          description: Created
        '400':
          description: Bad input format
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Unknown error.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: CRS-converter overloaded; try again later
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - Bearer Authorization: []
      deprecated: false
securityDefinitions:
  Bearer Authorization:
    type: apiKey
    name: Authorization
    in: header
definitions:
  ConvertGeoJsonRequest:
    type: object
    required:
      - featureCollection
      - toCRS
      - toUnitZ
    properties:
      featureCollection:
        description: The GeoJSON FeatureCollection or AnyCrsFeatureCollection structure to be converted/transformed. GeoJSON is always based on WGS 84; AnyCrsFeatureCollection carries the CRS context in the persistableReferenceCrs property. GeoJSON WGS 84 or the persistableReferenceCrs are taken as the 'fromCRS'.
        $ref: '#/definitions/GeoJsonFeatureCollection'
      toCRS:
        type: string
        example: '{"authCode":{"auth":"EPSG","code":"4326"},"name":"GCS_WGS_1984","type":"LBC","ver":"PE_10_3_1","wkt":"GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433],AUTHORITY[\"EPSG\",4326]]"}'
        description: Target CRS as persistable reference string
      toUnitZ:
        type: string
        example: '{"baseMeasurement":{"ancestry":"Length","type":"UM"},"scaleOffset":{"offset":0.0,"scale":1.0},"symbol":"m","type":"USO"}'
        description: 'Optional: the target Z-unit for the z-axis scaling.'
    title: ConvertGeoJsonRequest
    description: Request to convert a GeoJSON FeatureCollection or AnyCrsFeatureCollection from WGS 84 or 'AnyCrsFeatureCollection.persistableReferenceCrs to a target CRS.' to a target CRS
  ConvertGeoJsonResponse:
    type: object
    properties:
      featureCollection:
        description: 'The converted GeoJSON FeatureCollection or AnyCrsFeatureCollection with ''toCRS'' context; length and order of the structure is the same as in the request. Points, which failed to convert, are returned as NaN.'
        $ref: '#/definitions/GeoJsonFeatureCollection'
      operationsApplied:
        type: array
        description: The list of operations performed on the points as a list of strings
        items:
          type: string
      successCount:
        type: integer
        format: int32
        description: The number of coordinates in the GeoJSON FeatureCollection or AnyCrsFeatureCollection successfully converted/transformed. If this number is less than totalCount then conversion/transformation errors have occurred.
      totalCount:
        type: integer
        format: int32
        description: The total number of coordinates in the GeoJSON FeatureCollection or AnyCrsFeatureCollection.
    title: ConvertGeoJsonResponse
    description: Response of a CRS conversion/transformation operation involving GeoJSON FeatureCollection or AnyCrsFeatureCollection.
  ConvertPointsRequest:
    type: object
    required:
      - fromCRS
      - points
      - toCRS
    properties:
      fromCRS:
        type: string
        example: '{"lateBoundCRS":{"wkt":"GEOGCS[\"GCS_Provisional_S_American_1956\",DATUM[\"D_Provisional_S_American_1956\",SPHEROID[\"International_1924\",6378388.0,297.0]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433],AUTHORITY[\"EPSG\",4248]]","ver":"PE_10_3_1","name":"GCS_Provisional_S_American_1956","authCode":{"auth":"EPSG","code":"4248"},"type":"LBC"},"singleCT":{"wkt":"GEOGTRAN[\"PSAD_1956_To_WGS_1984_9\",GEOGCS[\"GCS_Provisional_S_American_1956\",DATUM[\"D_Provisional_S_American_1956\",SPHEROID[\"International_1924\",6378388.0,297.0]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"Geocentric_Translation\"],PARAMETER[\"X_Axis_Translation\",-295.0],PARAMETER[\"Y_Axis_Translation\",173.0],PARAMETER[\"Z_Axis_Translation\",-371.0],AUTHORITY[\"EPSG\",1209]]","ver":"PE_10_3_1","name":"PSAD_1956_To_WGS_1984_9","authCode":{"auth":"EPSG","code":"1209"},"type":"ST"},"ver":"PE_10_3_1","name":"PSAD56 * DMA-Ven [4248,1209]","authCode":{"auth":"SLB","code":"4248009"},"type":"EBC"}'
        description: Source CRS as persistable reference string
      points:
        type: array
        example:
          - x: -61.04340628871454
            'y': 10.673103179456877
            z: 0
        description: List of points to be converted
        items:
          $ref: '#/definitions/Point'
      toCRS:
        type: string
        example: '{"lateBoundCRS":{"wkt":"PROJCS[\"Trinidad_1903_Trinidad_Grid\",GEOGCS[\"GCS_Trinidad_1903\",DATUM[\"D_Trinidad_1903\",SPHEROID[\"Clarke_1858\",6378293.64520876,294.260676369]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Cassini\"],PARAMETER[\"False_Easting\",430000.0],PARAMETER[\"False_Northing\",325000.0],PARAMETER[\"Central_Meridian\",-61.3333333333333],PARAMETER[\"Scale_Factor\",1.0],PARAMETER[\"Latitude_Of_Origin\",10.4416666666667],UNIT[\"Link_Clarke\",0.201166195164],AUTHORITY[\"EPSG\",30200]]","ver":"PE_10_3_1","name":"Trinidad_1903_Trinidad_Grid","authCode":{"auth":"EPSG","code":"30200"},"type":"LBC"},"singleCT":{"wkt":"GEOGTRAN[\"Trinidad_1903_To_WGS_1984_2\",GEOGCS[\"GCS_Trinidad_1903\",DATUM[\"D_Trinidad_1903\",SPHEROID[\"Clarke_1858\",6378293.64520876,294.260676369]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],METHOD[\"Geocentric_Translation\"],PARAMETER[\"X_Axis_Translation\",-61.0],PARAMETER[\"Y_Axis_Translation\",285.2],PARAMETER[\"Z_Axis_Translation\",471.6],AUTHORITY[\"EPSG\",10085]]","ver":"PE_10_3_1","name":"Trinidad_1903_To_WGS_1984_2","authCode":{"auth":"EPSG","code":"10085"},"type":"ST"},"ver":"PE_10_3_1","name":"Trinidad 1903 * EOG-Tto Trin / Trinidad Grid [30200,10085]","authCode":{"auth":"SLB","code":"30200002"},"type":"EBC"}'
        description: Target CRS as persistable reference string
    title: ConvertPointsRequest
    description: Request to convert a set of points from a source CRS to a target CRS
  ConvertPointsResponse:
    type: object
    properties:
      operationsApplied:
        type: array
        description: The list of operations performed on the points as a list of strings
        items:
          type: string
      points:
        type: array
        description: 'Converted points; length and order of the array is the same as in the request. Points, which failed to convert, are returned as NaN.'
        items:
          $ref: '#/definitions/Point'
      successCount:
        type: integer
        format: int32
        description: Number of points successfully converted. If the number is less than the request array length conversion/transformation failures occurred.
    title: ConvertPointsResponse
    description: Response of a CRS conversion/transformation operation
  ConvertTrajectoryRequest:
    type: object
    required:
      - azimuthReference
      - inputStations
      - method
      - referencePoint
      - trajectoryCRS
      - unitZ
    properties:
      azimuthReference:
        type: string
        example: TRUE_NORTH
        description: azimuth reference for the input trajectory station azimuth values (TRUE_NORTH or GridNorth)
      inputKind:
        type: string
        example: MD_Inclination_Azimuth
        description: 'The kind of input; one of MD_Inclination_Azimuth (default), MD_X_Y_Z, MD_dX_dY_dZ, X_Y_Z, dX_dY_dZ. MD stands for measured depth; MD_X_Y_Z/X_Y_Z stand for absolute coordinates in the reference CRS, MD_dX_dY_dZ/dX_dY_dZ stand for deviations relative to the reference point.'
      inputStations:
        type: array
        example:
          - md: 0
            inclination: 0
            azimuth: 0
          - md: 1000
            inclination: 0
            azimuth: 0
          - md: 2000
            inclination: 90
            azimuth: 0
          - md: 3000
            inclination: 90
            azimuth: 0
          - md: 5000
            inclination: 90
            azimuth: 90
          - md: 6000
            inclination: 90
            azimuth: 90
        description: The array of input trajectory stations
        items:
          $ref: '#/definitions/TrajectoryStationIn'
      interpolate:
        type: boolean
        example: true
        description: Perform trajectory interpolation on demand; default is true.
      method:
        type: string
        example: AzimuthalEquidistant
        description: The computation method - 'AzimuthalEquidistant' (default) or 'LMP' (Lee's modified proposal SPE96813)
      referencePoint:
        description: The 3D reference point in the 'trajectoryCRS' where MD==0.
        $ref: '#/definitions/Point'
      trajectoryCRS:
        type: string
        example: '{"wkt":"PROJCS[\"WGS_1984_UTM_Zone_31N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",3.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0],AUTHORITY[\"EPSG\",32631]]","ver":"PE_10_3_1","name":"WGS_1984_UTM_Zone_31N","authCode":{"auth":"EPSG","code":"32631"},"type":"LBC"}'
        description: 'Coordinate reference system for the reference point; typically the CRS is a projected CRS; if a geographic CRS is provided, the unitXY must be defined and the azimuthReference must be TRUE_NORTH.'
      unitXY:
        type: string
        example: '{"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
        description: 'The horizontal unit of the dx, dy in the input trajectory stations; the unit must be a length unit in ''persistable model'' format, see example.'
      unitZ:
        type: string
        example: '{"scaleOffset":{"scale":1.0,"offset":0.0},"symbol":"m","baseMeasurement":{"ancestry":"Length","type":"UM"},"type":"USO"}'
        description: 'The vertical unit of the dz in the input trajectory stations; the unit must be a length unit in ''persistable model'' format, see example.'
    title: ConvertTrajectoryRequest
    description: 'Input trajectory data structure; contains the context (crs, units, azimuth reference, method)'
  ConvertTrajectoryResponse:
    type: object
    required:
      - localCRS
      - method
      - stations
      - trajectoryCRS
      - unitDls
      - unitZ
    properties:
      inputKind:
        type: string
        example: MD_Inclination_Azimuth
        description: 'The kind of input; one of MD_Inclination_Azimuth (default), MD_X_Y_Z, MD_dX_dY_dZ, X_Y_Z, dX_dY_dZ. MD stands for measured depth; MD_X_Y_Z/X_Y_Z stand for absolute coordinates in the reference CRS, MD_dX_dY_dZ/dX_dY_dZ stand for deviations relative to the reference point.'
      localCRS:
        type: string
        example:
          authCode:
            auth: SLB
            code: '30200002'
          lateBoundCRS:
            authCode:
              auth: EPSG
              code: '30200'
            name: Trinidad_1903_Trinidad_Grid
            type: LBC
            ver: PE_10_3_1
            wkt: 'PROJCS["Trinidad_1903_Trinidad_Grid",GEOGCS["GCS_Trinidad_1903",DATUM["D_Trinidad_1903",SPHEROID["Clarke_1858",6378293.64520876,294.260676369]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Cassini"],PARAMETER["False_Easting",430000.0],PARAMETER["False_Northing",325000.0],PARAMETER["Central_Meridian",-61.3333333333333],PARAMETER["Scale_Factor",1.0],PARAMETER["Latitude_Of_Origin",10.4416666666667],UNIT["Link_Clarke",0.201166195164],AUTHORITY["EPSG",30200]]'
          name: 'Trinidad 1903 * EOG-Tto Trin / Trinidad Grid [30200,10085]'
          singleCT:
            authCode:
              auth: EPSG
              code: '10085'
            name: Trinidad_1903_To_WGS_1984_2
            type: ST
            ver: PE_10_3_1
            wkt: 'GEOGTRAN["Trinidad_1903_To_WGS_1984_2",GEOGCS["GCS_Trinidad_1903",DATUM["D_Trinidad_1903",SPHEROID["Clarke_1858",6378293.64520876,294.260676369]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],METHOD["Geocentric_Translation"],PARAMETER["X_Axis_Translation",-61.0],PARAMETER["Y_Axis_Translation",285.2],PARAMETER["Z_Axis_Translation",471.6],AUTHORITY["EPSG",10085]]'
          type: EBC
          ver: PE_10_3_1
        description: 'Coordinate Reference System for the local, True North oriented, true distance, engineering CRS with origin at the well''s surface location.'
      method:
        type: string
        example: AzimuthalEquidistant
        description: The computation method used - 'AzimuthalEquidistant' (default) or 'LMP' (Lee's modified proposal SPE96813).
      operationsApplied:
        type: array
        description: The list of operations performed on the points as a list of strings
        items:
          type: string
      stations:
        type: array
        description: Computed trajectory stations.
        items:
          $ref: '#/definitions/TrajectoryStationOut'
      trajectoryCRS:
        type: string
        example:
          authCode:
            auth: SLB
            code: '30200002'
          lateBoundCRS:
            authCode:
              auth: EPSG
              code: '30200'
            name: Trinidad_1903_Trinidad_Grid
            type: LBC
            ver: PE_10_3_1
            wkt: 'PROJCS["Trinidad_1903_Trinidad_Grid",GEOGCS["GCS_Trinidad_1903",DATUM["D_Trinidad_1903",SPHEROID["Clarke_1858",6378293.64520876,294.260676369]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Cassini"],PARAMETER["False_Easting",430000.0],PARAMETER["False_Northing",325000.0],PARAMETER["Central_Meridian",-61.3333333333333],PARAMETER["Scale_Factor",1.0],PARAMETER["Latitude_Of_Origin",10.4416666666667],UNIT["Link_Clarke",0.201166195164],AUTHORITY["EPSG",30200]]'
          name: 'Trinidad 1903 * EOG-Tto Trin / Trinidad Grid [30200,10085]'
          singleCT:
            authCode:
              auth: EPSG
              code: '10085'
            name: Trinidad_1903_To_WGS_1984_2
            type: ST
            ver: PE_10_3_1
            wkt: 'GEOGTRAN["Trinidad_1903_To_WGS_1984_2",GEOGCS["GCS_Trinidad_1903",DATUM["D_Trinidad_1903",SPHEROID["Clarke_1858",6378293.64520876,294.260676369]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],METHOD["Geocentric_Translation"],PARAMETER["X_Axis_Translation",-61.0],PARAMETER["Y_Axis_Translation",285.2],PARAMETER["Z_Axis_Translation",471.6],AUTHORITY["EPSG",10085]]'
          type: EBC
          ver: PE_10_3_1
        description: 'Coordinate reference system for the reference point; typically the CRS is a projected CRS; if a geographic CRS is provided, the unitXY must be defined and the azimuthReference must be TRUE_NORTH.'
      unitDls:
        type: string
        example: '%7B%22ScaleOffset%22%3A%7B%22Scale%22%3A5.72614583987641E-4%2C%22Offset%22%3A0.0%7D%2C%22Symbol%22%3A%22deg%2F100ft%22%2C%22BaseMeasurement%22%3A%22%257B%2522Ancestry%2522%253A%2522Rotation_Per_Length%2522%257D%22%7D'
        description: The unit of the dog leg severity (DLS) in the output trajectory stations.
      unitXY:
        type: string
        example:
          scaleOffset:
            scale: 1
            offset: 0
          symbol: m
          baseMeasurement:
            ancestry: Length
            type: UM
          type: USO
        description: 'The horizontal unit of the dx, dy in the output trajectory stations.'
      unitZ:
        type: string
        example:
          scaleOffset:
            scale: 1
            offset: 0
          symbol: m
          baseMeasurement:
            ancestry: Length
            type: UM
          type: USO
        description: The vertical unit of the dz in the output trajectory stations.
    title: ConvertTrajectoryResponse
    description: 'Trajectory response data structure; contains the context (crs, units).'
  ErrorResponse:
    type: object
    properties:
      error:
        type: string
        description: Error message
    title: ErrorResponse
    description: Response resulting of a failed CRS conversion operation
  GeoJsonBase:
    type: object
    properties:
      bbox:
        type: array
        items:
          type: number
          format: double
      dimension:
        type: integer
        format: int32
      geoJsonVariant:
        type: string
        enum:
          - GEO_JSON
          - ANY_CRS_GEO_JSON
      geoJsonVariantInternal:
        type: string
        enum:
          - GEO_JSON
          - ANY_CRS_GEO_JSON
      type:
        type: string
      valid:
        type: boolean
    title: GeoJsonBase
  GeoJsonFeature:
    title: GeoJsonFeature
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          dimension:
            type: integer
            format: int32
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geometry:
            $ref: '#/definitions/GeoJsonBase'
          length:
            type: integer
            format: int32
          properties:
            type: object
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonFeature
  GeoJsonFeatureCollection:
    title: GeoJsonFeatureCollection
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          dimension:
            type: integer
            format: int32
          features:
            type: array
            items:
              $ref: '#/definitions/GeoJsonFeature'
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          length:
            type: integer
            format: int32
          persistableReferenceCrs:
            type: string
          persistableReferenceUnitZ:
            type: string
          properties:
            type: object
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonFeatureCollection
  GeoJsonGeometryCollection:
    title: GeoJsonGeometryCollection
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          dimension:
            type: integer
            format: int32
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geometries:
            type: array
            items:
              $ref: '#/definitions/GeoJsonBase'
          length:
            type: integer
            format: int32
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonGeometryCollection
  GeoJsonLineString:
    title: GeoJsonLineString
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          coordinates:
            type: array
            items:
              type: array
              items:
                type: number
                format: double
          dimension:
            type: integer
            format: int32
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          length:
            type: integer
            format: int32
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonLineString
  GeoJsonMultiLineString:
    title: GeoJsonMultiLineString
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          coordinates:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  type: number
                  format: double
          dimension:
            type: integer
            format: int32
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          length:
            type: integer
            format: int32
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonMultiLineString
  GeoJsonMultiPoint:
    title: GeoJsonMultiPoint
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          coordinates:
            type: array
            items:
              type: array
              items:
                type: number
                format: double
          dimension:
            type: integer
            format: int32
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          length:
            type: integer
            format: int32
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonMultiPoint
  GeoJsonMultiPolygon:
    title: GeoJsonMultiPolygon
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          coordinates:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: double
          dimension:
            type: integer
            format: int32
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          length:
            type: integer
            format: int32
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonMultiPolygon
  GeoJsonPoint:
    title: GeoJsonPoint
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          coordinates:
            type: array
            items:
              type: number
              format: double
          dimension:
            type: integer
            format: int32
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          length:
            type: integer
            format: int32
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonPoint
  GeoJsonPolygon:
    title: GeoJsonPolygon
    allOf:
      - $ref: '#/definitions/GeoJsonBase'
      - type: object
        properties:
          bbox:
            type: array
            items:
              type: number
              format: double
          coordinates:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  type: number
                  format: double
          dimension:
            type: integer
            format: int32
          geoJsonVariant:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          geoJsonVariantInternal:
            type: string
            enum:
              - GEO_JSON
              - ANY_CRS_GEO_JSON
          length:
            type: integer
            format: int32
          type:
            type: string
          valid:
            type: boolean
        title: GeoJsonPolygon
  Point:
    type: object
    required:
      - x
      - 'y'
      - z
    properties:
      x:
        type: number
        format: double
        example: -61.04340628871454
        description: x coordinate or longitude
      'y':
        type: number
        format: double
        example: 10.673103179456877
        description: y coordinate or latitude
      z:
        type: number
        format: double
        example: 0
        description: z coordinate
    title: Point
    description: Point representation for CRS operations
  TrajectoryStationIn:
    type: object
    required:
      - azimuth
      - inclination
      - md
    properties:
      azimuth:
        type: number
        format: double
        example: 355
        description: 'Azimuth angle in degrees of arc, 0.0/360.0 is North; reference given by azimuthReference (TRUE_NORTH or GridNorth).'
      dx:
        type: number
        format: double
        example: 55.9
        description: E-W deviation in the local Cartesian engineering CRS from the well reference point; unit is given by container's 'unitXY' or projected 'trajectoryCRS'.
      dy:
        type: number
        format: double
        example: -145.3
        description: N-S deviation in the local Cartesian engineering CRS from the well reference point; Y is aligned with azimuth reference (TRUE_NORTH or projected GridNorth); unit is given by container's 'unitXY' or projected 'trajectoryCRS'.
      dz:
        type: number
        format: double
        example: 1965.6
        description: True vertical deviation in the local Cartesian engineering CRS from the well reference point; unit is given by container's unitZ; downwards positive.
      inclination:
        type: number
        format: double
        example: 15
        description: 'Inclination angle in degrees of arc, 0.0 is vertical, 90.0 is horizontal.'
      md:
        type: number
        format: double
        example: 2563.56
        description: MD (measured depth) from vertical reference point in 'unitZ'.
    title: TrajectoryStationIn
    description: Input trajectory station record; context is provided by the container.
  TrajectoryStationOut:
    type: object
    required:
      - azimuthGN
      - azimuthTN
      - dxTN
      - dyTN
      - inclination
      - md
      - point
    properties:
      azimuthGN:
        type: number
        format: double
        example: 355
        description: 'Grid North azimuth angle in degrees of arc, 0.0/360.0 is North.'
      azimuthTN:
        type: number
        format: double
        example: 355.96
        description: 'True North azimuth angle in degrees of arc, 0.0/360.0 is North.'
      dls:
        type: number
        format: double
        description: 'Curvature, Dog Leg Severity, measured in ''unitDls''.'
      dxTN:
        type: number
        format: double
        example: 55.9
        description: True E-W deviation in the local Cartesian engineering CRS from the well reference point; unit is given by container's 'unitXY'.
      dyTN:
        type: number
        format: double
        example: -145.3
        description: True N-S deviation in the local Cartesian engineering CRS from the well reference point; Y is aligned with TRUE_NORTH; unit is given by container's 'unitXY'.
      dz:
        type: number
        format: double
      inclination:
        type: number
        format: double
        example: 15
        description: 'Inclination angle in degrees of arc, 0.0 is vertical, 90.0 is horizontal.'
      md:
        type: number
        format: double
        example: 2563.56
        description: MD (measured depth) from vertical reference point in 'unitZ'.
      original:
        type: boolean
        description: 'Original trajectory station if true, interpolated trajectory station if false.'
      point:
        description: Trajectory station point in trajectoryCRS and vertical unit as defined in container's 'unitZ'.
        $ref: '#/definitions/Point'
      wgs84Latitude:
        type: number
        format: double
        description: WGS 84 latitude in dega
      wgs84Longitude:
        type: number
        format: double
        description: WGS 84 longitude in dega
    title: TrajectoryStationOut
    description: Output trajectory station record; context is provided by the container.
